{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IPoolManager",
          "name": "_poolManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "hooks",
          "type": "address"
        }
      ],
      "name": "HookAddressNotValid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "HookNotImplemented",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPool",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LockFailure",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MustUseDynamicFee",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotPoolManager",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotSelf",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "afterDonate",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "uint160",
          "name": "",
          "type": "uint160"
        },
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "afterInitialize",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "int24",
              "name": "tickLower",
              "type": "int24"
            },
            {
              "internalType": "int24",
              "name": "tickUpper",
              "type": "int24"
            },
            {
              "internalType": "int256",
              "name": "liquidityDelta",
              "type": "int256"
            }
          ],
          "internalType": "struct IPoolManager.ModifyPositionParams",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "BalanceDelta",
          "name": "",
          "type": "int256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "afterModifyPosition",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "zeroForOne",
              "type": "bool"
            },
            {
              "internalType": "int256",
              "name": "amountSpecified",
              "type": "int256"
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceLimitX96",
              "type": "uint160"
            }
          ],
          "internalType": "struct IPoolManager.SwapParams",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "BalanceDelta",
          "name": "",
          "type": "int256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "afterSwap",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "beforeDonate",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "key",
          "type": "tuple"
        },
        {
          "internalType": "uint160",
          "name": "",
          "type": "uint160"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "beforeInitialize",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "int24",
              "name": "tickLower",
              "type": "int24"
            },
            {
              "internalType": "int24",
              "name": "tickUpper",
              "type": "int24"
            },
            {
              "internalType": "int256",
              "name": "liquidityDelta",
              "type": "int256"
            }
          ],
          "internalType": "struct IPoolManager.ModifyPositionParams",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "beforeModifyPosition",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "zeroForOne",
              "type": "bool"
            },
            {
              "internalType": "int256",
              "name": "amountSpecified",
              "type": "int256"
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceLimitX96",
              "type": "uint160"
            }
          ],
          "internalType": "struct IPoolManager.SwapParams",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "beforeSwap",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "zeroForOne",
              "type": "bool"
            },
            {
              "internalType": "int256",
              "name": "amountSpecified",
              "type": "int256"
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceLimitX96",
              "type": "uint160"
            }
          ],
          "internalType": "struct IPoolManager.SwapParams",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "getFee",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHooksCalls",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "beforeInitialize",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "afterInitialize",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "beforeModifyPosition",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "afterModifyPosition",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "beforeSwap",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "afterSwap",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "beforeDonate",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "afterDonate",
              "type": "bool"
            }
          ],
          "internalType": "struct Hooks.Calls",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract VolatilityOracle",
          "name": "_volatilityOracle",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "lockAcquired",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolManager",
      "outputs": [
        {
          "internalType": "contract IPoolManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b50604051610bd5380380610bd583398101604081905261002f916101ec565b6001600160a01b0381166080528061004630610067565b50506000805464ffffffff0019166101004263ffffffff160217905561021c565b6100fa816100f56040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915250604080516101008101825260018152600060208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915290565b6100fd565b50565b805115156001609f1b831615151415806101255750602081015115156001609e1b8316151514155b8061013e5750604081015115156001609d1b8316151514155b806101575750606081015115156001609c1b8316151514155b806101705750608081015115156001609b1b8316151514155b80610189575060a081015115156001609a1b8316151514155b806101a2575060c08101511515600160991b8316151514155b806101bb575060e08101511515600160981b8316151514155b156101e857604051630732d7b560e51b81526001600160a01b038316600482015260240160405180910390fd5b5050565b6000602082840312156101fe57600080fd5b81516001600160a01b038116811461021557600080fd5b9392505050565b60805161099761023e6000396000818161023a01526103b701526109976000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063ab6291fe1161008c578063c4d66de811610066578063c4d66de814610220578063dc4c90d314610235578063e1b4af6914610212578063fe9a6f451461013f57600080fd5b8063ab6291fe146101f2578063b47b2fb114610100578063b6a8b0fa1461021257600080fd5b80632ab7a3e2146100d457806330b7cdef146101005780633440d8201461012c578063575e24b41461013f578063612c39b71461014d578063a910f80f146101e4575b600080fd5b6100e76100e236600461059e565b610274565b60405162ffffff90911681526020015b60405180910390f35b61011361010e36600461061a565b610341565b6040516001600160e01b031990911681526020016100f7565b61011361013a3660046106a0565b61035c565b61011361010e36600461059e565b6101d76040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915250604080516101008101825260018152600060208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915290565b6040516100f791906106ff565b61011361010e366004610788565b610205610200366004610800565b6103aa565b6040516100f79190610842565b61011361010e366004610890565b61023361022e3660046108ef565b610498565b005b61025c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100f7565b6000805460ff166102be5760405162461bcd60e51b815260206004820152600f60248201526e139bdd081a5b9a5d1a585b1a5e9959608a1b60448201526064015b60405180910390fd5b60008060059054906101000a90046001600160a01b03166001600160a01b0316633af2888b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610312573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103369190610913565b979650505050505050565b6000604051630a85dc2960e01b815260040160405180910390fd5b600061037b610371606087016040880161092c565b6280000016151590565b610398576040516315b3d69f60e31b815260040160405180910390fd5b506301a206c160e51b95945050505050565b6060336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103f55760405163570c108560e11b815260040160405180910390fd5b600080306001600160a01b03168585604051610412929190610951565b6000604051808303816000865af19150503d806000811461044f576040519150601f19603f3d011682016040523d82523d6000602084013e610454565b606091505b509150915081156104685791506104929050565b805160000361048a576040516314815f4760e31b815260040160405180910390fd5b805160208201fd5b92915050565b60005460ff16156104e15760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064016102b5565b600080546001600160a01b03909216650100000000000264ffffffff01600160c81b0319909216919091176001179055565b6001600160a01b038116811461052857600080fd5b50565b600060a0828403121561053d57600080fd5b50919050565b60006060828403121561053d57600080fd5b60008083601f84011261056757600080fd5b50813567ffffffffffffffff81111561057f57600080fd5b60208301915083602082850101111561059757600080fd5b9250929050565b600080600080600061014086880312156105b757600080fd5b85356105c281610513565b94506105d1876020880161052b565b93506105e08760c08801610543565b925061012086013567ffffffffffffffff8111156105fd57600080fd5b61060988828901610555565b969995985093965092949392505050565b600080600080600080610160878903121561063457600080fd5b863561063f81610513565b955061064e886020890161052b565b945061065d8860c08901610543565b9350610120870135925061014087013567ffffffffffffffff81111561068257600080fd5b61068e89828a01610555565b979a9699509497509295939492505050565b600080600080600061010086880312156106b957600080fd5b85356106c481610513565b94506106d3876020880161052b565b935060c08601356106e381610513565b925060e086013567ffffffffffffffff8111156105fd57600080fd5b6000610100820190508251151582526020830151151560208301526040830151151560408301526060830151151560608301526080830151610745608084018215159052565b5060a083015161075960a084018215159052565b5060c083015161076d60c084018215159052565b5060e083015161078160e084018215159052565b5092915050565b60008060008060008061012087890312156107a257600080fd5b86356107ad81610513565b95506107bc886020890161052b565b945060c08701356107cc81610513565b935060e0870135600281900b81146107e357600080fd5b925061010087013567ffffffffffffffff81111561068257600080fd5b6000806020838503121561081357600080fd5b823567ffffffffffffffff81111561082a57600080fd5b61083685828601610555565b90969095509350505050565b600060208083528351808285015260005b8181101561086f57858101830151858201604001528201610853565b506000604082860101526040601f19601f8301168501019250505092915050565b60008060008060008061012087890312156108aa57600080fd5b86356108b581610513565b95506108c4886020890161052b565b945060c0870135935060e0870135925061010087013567ffffffffffffffff81111561068257600080fd5b60006020828403121561090157600080fd5b813561090c81610513565b9392505050565b60006020828403121561092557600080fd5b5051919050565b60006020828403121561093e57600080fd5b813562ffffff8116811461090c57600080fd5b818382376000910190815291905056fea26469706673582212200fa804acf3895d8d90aaf8c13117031368b3a2264ca37c00791aea6ffdd9ea3a64736f6c63430008140033",
    "sourceMap": "575:1744:65:-:0;;;1462:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;764:26:12;;;;1510:12:65;800:25:12;820:4;800:19;:25::i;:::-;-1:-1:-1;;1534:15:65::1;:35:::0;;-1:-1:-1;;1534:35:65::1;;1433:15:::0;1534:35:::1;;;;::::0;;575:1744;;1647:133:12;1724:49;1750:5;1757:15;575:1744:65;;;;;;;;-1:-1:-1;575:1744:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1686:338:65;;;;;;;;1734:4;1686:338;;-1:-1:-1;1686:338:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1582:449;1757:15:12;1724:25;:49::i;:::-;1647:133;:::o;1930:726:46:-;2033:22;;:58;;-1:-1:-1;;;3448:56:46;;:61;;2033:58;;;:134;;-1:-1:-1;2111:21:46;;;;:56;;-1:-1:-1;;;3616:55:46;;:60;;2111:56;;2033:134;:220;;;-1:-1:-1;2187:26:46;;;;:66;;-1:-1:-1;;;3788:61:46;;:66;;2187;;2033:220;:304;;;-1:-1:-1;2273:25:46;;;;:64;;-1:-1:-1;;;3965:60:46;;:65;;2273:64;;2033:304;:370;;;-1:-1:-1;2357:16:46;;;;:46;;-1:-1:-1;;;4132:50:46;;:55;;2357:46;;2033:370;:418;;;-1:-1:-1;2407:15:46;;;;:44;;-1:-1:-1;;;4288:49:46;;:54;;2407:44;;2033:418;:488;;;-1:-1:-1;2471:18:46;;;;:50;;-1:-1:-1;;;4446:52:46;;:57;;2471:50;;2033:488;:540;;;-1:-1:-1;2525:17:46;;;;:48;;-1:-1:-1;;;4606:51:46;;:56;;2525:48;;2033:540;2016:634;;;2605:34;;-1:-1:-1;;;2605:34:46;;-1:-1:-1;;;;;495:32:69;;2605:34:46;;;477:51:69;450:18;;2605:34:46;;;;;;;2016:634;1930:726;;:::o;14:312:69:-;106:6;159:2;147:9;138:7;134:23;130:32;127:52;;;175:1;172;165:12;127:52;201:16;;-1:-1:-1;;;;;246:31:69;;236:42;;226:70;;292:1;289;282:12;226:70;315:5;14:312;-1:-1:-1;;;14:312:69:o;331:203::-;575:1744:65;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063ab6291fe1161008c578063c4d66de811610066578063c4d66de814610220578063dc4c90d314610235578063e1b4af6914610212578063fe9a6f451461013f57600080fd5b8063ab6291fe146101f2578063b47b2fb114610100578063b6a8b0fa1461021257600080fd5b80632ab7a3e2146100d457806330b7cdef146101005780633440d8201461012c578063575e24b41461013f578063612c39b71461014d578063a910f80f146101e4575b600080fd5b6100e76100e236600461059e565b610274565b60405162ffffff90911681526020015b60405180910390f35b61011361010e36600461061a565b610341565b6040516001600160e01b031990911681526020016100f7565b61011361013a3660046106a0565b61035c565b61011361010e36600461059e565b6101d76040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915250604080516101008101825260018152600060208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915290565b6040516100f791906106ff565b61011361010e366004610788565b610205610200366004610800565b6103aa565b6040516100f79190610842565b61011361010e366004610890565b61023361022e3660046108ef565b610498565b005b61025c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100f7565b6000805460ff166102be5760405162461bcd60e51b815260206004820152600f60248201526e139bdd081a5b9a5d1a585b1a5e9959608a1b60448201526064015b60405180910390fd5b60008060059054906101000a90046001600160a01b03166001600160a01b0316633af2888b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610312573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103369190610913565b979650505050505050565b6000604051630a85dc2960e01b815260040160405180910390fd5b600061037b610371606087016040880161092c565b6280000016151590565b610398576040516315b3d69f60e31b815260040160405180910390fd5b506301a206c160e51b95945050505050565b6060336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103f55760405163570c108560e11b815260040160405180910390fd5b600080306001600160a01b03168585604051610412929190610951565b6000604051808303816000865af19150503d806000811461044f576040519150601f19603f3d011682016040523d82523d6000602084013e610454565b606091505b509150915081156104685791506104929050565b805160000361048a576040516314815f4760e31b815260040160405180910390fd5b805160208201fd5b92915050565b60005460ff16156104e15760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064016102b5565b600080546001600160a01b03909216650100000000000264ffffffff01600160c81b0319909216919091176001179055565b6001600160a01b038116811461052857600080fd5b50565b600060a0828403121561053d57600080fd5b50919050565b60006060828403121561053d57600080fd5b60008083601f84011261056757600080fd5b50813567ffffffffffffffff81111561057f57600080fd5b60208301915083602082850101111561059757600080fd5b9250929050565b600080600080600061014086880312156105b757600080fd5b85356105c281610513565b94506105d1876020880161052b565b93506105e08760c08801610543565b925061012086013567ffffffffffffffff8111156105fd57600080fd5b61060988828901610555565b969995985093965092949392505050565b600080600080600080610160878903121561063457600080fd5b863561063f81610513565b955061064e886020890161052b565b945061065d8860c08901610543565b9350610120870135925061014087013567ffffffffffffffff81111561068257600080fd5b61068e89828a01610555565b979a9699509497509295939492505050565b600080600080600061010086880312156106b957600080fd5b85356106c481610513565b94506106d3876020880161052b565b935060c08601356106e381610513565b925060e086013567ffffffffffffffff8111156105fd57600080fd5b6000610100820190508251151582526020830151151560208301526040830151151560408301526060830151151560608301526080830151610745608084018215159052565b5060a083015161075960a084018215159052565b5060c083015161076d60c084018215159052565b5060e083015161078160e084018215159052565b5092915050565b60008060008060008061012087890312156107a257600080fd5b86356107ad81610513565b95506107bc886020890161052b565b945060c08701356107cc81610513565b935060e0870135600281900b81146107e357600080fd5b925061010087013567ffffffffffffffff81111561068257600080fd5b6000806020838503121561081357600080fd5b823567ffffffffffffffff81111561082a57600080fd5b61083685828601610555565b90969095509350505050565b600060208083528351808285015260005b8181101561086f57858101830151858201604001528201610853565b506000604082860101526040601f19601f8301168501019250505092915050565b60008060008060008061012087890312156108aa57600080fd5b86356108b581610513565b95506108c4886020890161052b565b945060c0870135935060e0870135925061010087013567ffffffffffffffff81111561068257600080fd5b60006020828403121561090157600080fd5b813561090c81610513565b9392505050565b60006020828403121561092557600080fd5b5051919050565b60006020828403121561093e57600080fd5b813562ffffff8116811461090c57600080fd5b818382376000910190815291905056fea26469706673582212200fa804acf3895d8d90aaf8c13117031368b3a2264ca37c00791aea6ffdd9ea3a64736f6c63430008140033",
    "sourceMap": "575:1744:65:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;996:316;;;;;;:::i;:::-;;:::i;:::-;;;1812:8:69;1800:21;;;1782:40;;1770:2;1755:18;996:316:65;;;;;;;;2842:254:12;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;2920:33:69;;;2902:52;;2890:2;2875:18;2842:254:12;2758:202:69;2037:280:65;;;;;;:::i;:::-;;:::i;3102:203:12:-;;;;;;:::i;1582:449:65:-;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1686:338:65;;;;;;;;1734:4;1686:338;;-1:-1:-1;1686:338:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1582:449;;;;;;;;:::i;2417:190:12:-;;;;;;:::i;1786:463::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3533:189::-;;;;;;:::i;792:198:65:-;;;;;;:::i;:::-;;:::i;:::-;;667:41:12;;;;;;;;-1:-1:-1;;;;;8986:32:69;;;8968:51;;8956:2;8941:18;667:41:12;8800:225:69;996:316:65;1150:6;1176:11;;;;1168:39;;;;-1:-1:-1;;;1168:39:65;;10054:2:69;1168:39:65;;;10036:21:69;10093:2;10073:18;;;10066:30;-1:-1:-1;;;10112:18:69;;;10105:45;10167:18;;1168:39:65;;;;;;;;;1217:10;1237:16;;;;;;;;;-1:-1:-1;;;;;1237:16:65;-1:-1:-1;;;;;1237:30:65;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1217:53;996:316;-1:-1:-1;;;;;;;996:316:65:o;2842:254:12:-;3044:6;3069:20;;-1:-1:-1;;;3069:20:12;;;;;;;;;;;2037:280:65;2189:6;2212:22;:7;;;;;;;;:::i;:::-;193:8:42;433:23;:28;;;352:116;2212:22:65;2207:55;;2243:19;;-1:-1:-1;;;2243:19:65;;;;;;;;;;;2207:55;-1:-1:-1;;;;2037:280:65;;;;;;;:::o;1786:463:12:-;1871:12;937:10;-1:-1:-1;;;;;959:11:12;937:34;;933:63;;980:16;;-1:-1:-1;;;980:16:12;;;;;;;;;;;933:63;1896:12:::1;1910:23:::0;1945:4:::1;-1:-1:-1::0;;;;;1937:18:12::1;1956:4;;1937:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1895:66;;;;1975:7;1971:30;;;1991:10:::0;-1:-1:-1;1984:17:12::1;::::0;-1:-1:-1;1984:17:12::1;1971:30;2015:10;:17;2036:1;2015:22:::0;2011:48:::1;;2046:13;;-1:-1:-1::0;;;2046:13:12::1;;;;;;;;;;;2011:48;2221:10;2215:17;2210:2;2198:10;2194:19;2187:46;1006:1;1786:463:::0;;;;:::o;792:198:65:-;874:11;;;;873:12;865:44;;;;-1:-1:-1;;;865:44:65;;11142:2:69;865:44:65;;;11124:21:69;11181:2;11161:18;;;11154:30;-1:-1:-1;;;11200:18:69;;;11193:49;11259:18;;865:44:65;10940:343:69;865:44:65;919:11;:18;;-1:-1:-1;;;;;947:36:65;;;;;-1:-1:-1;;;;;;947:36:65;;;;;;;933:4;947:36;;;792:198::o;14:131:69:-;-1:-1:-1;;;;;89:31:69;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:156::-;210:5;255:3;246:6;241:3;237:16;233:26;230:46;;;272:1;269;262:12;230:46;-1:-1:-1;294:6:69;150:156;-1:-1:-1;150:156:69:o;311:158::-;374:5;419:2;410:6;405:3;401:16;397:25;394:45;;;435:1;432;425:12;474:347;525:8;535:6;589:3;582:4;574:6;570:17;566:27;556:55;;607:1;604;597:12;556:55;-1:-1:-1;630:20:69;;673:18;662:30;;659:50;;;705:1;702;695:12;659:50;742:4;734:6;730:17;718:29;;794:3;787:4;778:6;770;766:19;762:30;759:39;756:59;;;811:1;808;801:12;756:59;474:347;;;;;:::o;826:807::-;982:6;990;998;1006;1014;1067:3;1055:9;1046:7;1042:23;1038:33;1035:53;;;1084:1;1081;1074:12;1035:53;1123:9;1110:23;1142:31;1167:5;1142:31;:::i;:::-;1192:5;-1:-1:-1;1216:63:69;1271:7;1266:2;1251:18;;1216:63;:::i;:::-;1206:73;;1298:67;1357:7;1351:3;1340:9;1336:19;1298:67;:::i;:::-;1288:77;;1416:3;1405:9;1401:19;1388:33;1444:18;1436:6;1433:30;1430:50;;;1476:1;1473;1466:12;1430:50;1515:58;1565:7;1556:6;1545:9;1541:22;1515:58;:::i;:::-;826:807;;;;-1:-1:-1;826:807:69;;-1:-1:-1;1592:8:69;;1489:84;826:807;-1:-1:-1;;;826:807:69:o;1833:920::-;2042:6;2050;2058;2066;2074;2082;2135:3;2123:9;2114:7;2110:23;2106:33;2103:53;;;2152:1;2149;2142:12;2103:53;2191:9;2178:23;2210:31;2235:5;2210:31;:::i;:::-;2260:5;-1:-1:-1;2284:63:69;2339:7;2334:2;2319:18;;2284:63;:::i;:::-;2274:73;;2366:67;2425:7;2419:3;2408:9;2404:19;2366:67;:::i;:::-;2356:77;;2480:3;2469:9;2465:19;2452:33;2442:43;;2536:3;2525:9;2521:19;2508:33;2564:18;2556:6;2553:30;2550:50;;;2596:1;2593;2586:12;2550:50;2635:58;2685:7;2676:6;2665:9;2661:22;2635:58;:::i;:::-;1833:920;;;;-1:-1:-1;1833:920:69;;-1:-1:-1;1833:920:69;;2712:8;;1833:920;-1:-1:-1;;;1833:920:69:o;2965:815::-;3090:6;3098;3106;3114;3122;3175:3;3163:9;3154:7;3150:23;3146:33;3143:53;;;3192:1;3189;3182:12;3143:53;3231:9;3218:23;3250:31;3275:5;3250:31;:::i;:::-;3300:5;-1:-1:-1;3324:63:69;3379:7;3374:2;3359:18;;3324:63;:::i;:::-;3314:73;;3439:3;3428:9;3424:19;3411:33;3453;3478:7;3453:33;:::i;:::-;3505:7;-1:-1:-1;3563:3:69;3548:19;;3535:33;3591:18;3580:30;;3577:50;;;3623:1;3620;3613:12;3881:950;4021:4;4063:3;4052:9;4048:19;4040:27;;4114:6;4108:13;4101:21;4094:29;4083:9;4076:48;4194:4;4186:6;4182:17;4176:24;4169:32;4162:40;4155:4;4144:9;4140:20;4133:70;4273:4;4265:6;4261:17;4255:24;4248:32;4241:40;4234:4;4223:9;4219:20;4212:70;4352:4;4344:6;4340:17;4334:24;4327:32;4320:40;4313:4;4302:9;4298:20;4291:70;4408:4;4400:6;4396:17;4390:24;4423:51;4468:4;4457:9;4453:20;4439:12;3855:13;3848:21;3836:34;;3785:91;4423:51;;4523:4;4515:6;4511:17;4505:24;4538:53;4585:4;4574:9;4570:20;4554:14;3855:13;3848:21;3836:34;;3785:91;4538:53;;4640:4;4632:6;4628:17;4622:24;4655:53;4702:4;4691:9;4687:20;4671:14;3855:13;3848:21;3836:34;;3785:91;4655:53;;4757:4;4749:6;4745:17;4739:24;4772:53;4819:4;4808:9;4804:20;4788:14;3855:13;3848:21;3836:34;;3785:91;4772:53;;3881:950;;;;:::o;4836:985::-;4968:6;4976;4984;4992;5000;5008;5061:3;5049:9;5040:7;5036:23;5032:33;5029:53;;;5078:1;5075;5068:12;5029:53;5117:9;5104:23;5136:31;5161:5;5136:31;:::i;:::-;5186:5;-1:-1:-1;5210:63:69;5265:7;5260:2;5245:18;;5210:63;:::i;:::-;5200:73;;5325:3;5314:9;5310:19;5297:33;5339;5364:7;5339:33;:::i;:::-;5391:7;-1:-1:-1;5450:3:69;5435:19;;5422:33;5497:1;5486:22;;;5474:35;;5464:63;;5523:1;5520;5513:12;5464:63;5546:7;-1:-1:-1;5604:3:69;5589:19;;5576:33;5632:18;5621:30;;5618:50;;;5664:1;5661;5654:12;5826:409;5896:6;5904;5957:2;5945:9;5936:7;5932:23;5928:32;5925:52;;;5973:1;5970;5963:12;5925:52;6013:9;6000:23;6046:18;6038:6;6035:30;6032:50;;;6078:1;6075;6068:12;6032:50;6117:58;6167:7;6158:6;6147:9;6143:22;6117:58;:::i;:::-;6194:8;;6091:84;;-1:-1:-1;5826:409:69;-1:-1:-1;;;;5826:409:69:o;6240:546::-;6350:4;6379:2;6408;6397:9;6390:21;6440:6;6434:13;6483:6;6478:2;6467:9;6463:18;6456:34;6508:1;6518:140;6532:6;6529:1;6526:13;6518:140;;;6627:14;;;6623:23;;6617:30;6593:17;;;6612:2;6589:26;6582:66;6547:10;;6518:140;;;6522:3;6707:1;6702:2;6693:6;6682:9;6678:22;6674:31;6667:42;6777:2;6770;6766:7;6761:2;6753:6;6749:15;6745:29;6734:9;6730:45;6726:54;6718:62;;;;6240:546;;;;:::o;7706:811::-;7840:6;7848;7856;7864;7872;7880;7933:3;7921:9;7912:7;7908:23;7904:33;7901:53;;;7950:1;7947;7940:12;7901:53;7989:9;7976:23;8008:31;8033:5;8008:31;:::i;:::-;8058:5;-1:-1:-1;8082:63:69;8137:7;8132:2;8117:18;;8082:63;:::i;:::-;8072:73;;8192:3;8181:9;8177:19;8164:33;8154:43;;8244:3;8233:9;8229:19;8216:33;8206:43;;8300:3;8289:9;8285:19;8272:33;8328:18;8320:6;8317:30;8314:50;;;8360:1;8357;8350:12;8522:273;8607:6;8660:2;8648:9;8639:7;8635:23;8631:32;8628:52;;;8676:1;8673;8666:12;8628:52;8715:9;8702:23;8734:31;8759:5;8734:31;:::i;:::-;8784:5;8522:273;-1:-1:-1;;;8522:273:69:o;10196:184::-;10266:6;10319:2;10307:9;10298:7;10294:23;10290:32;10287:52;;;10335:1;10332;10325:12;10287:52;-1:-1:-1;10358:16:69;;10196:184;-1:-1:-1;10196:184:69:o;10385:274::-;10443:6;10496:2;10484:9;10475:7;10471:23;10467:32;10464:52;;;10512:1;10509;10502:12;10464:52;10551:9;10538:23;10601:8;10594:5;10590:20;10583:5;10580:31;10570:59;;10625:1;10622;10615:12;10664:271;10847:6;10839;10834:3;10821:33;10803:3;10873:16;;10898:13;;;10873:16;10664:271;-1:-1:-1;10664:271:69:o",
    "linkReferences": {},
    "immutableReferences": {
      "24134": [
        {
          "start": 570,
          "length": 32
        },
        {
          "start": 951,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": "e1b4af69",
    "afterInitialize(address,(address,address,uint24,int24,address),uint160,int24,bytes)": "a910f80f",
    "afterModifyPosition(address,(address,address,uint24,int24,address),(int24,int24,int256),int256,bytes)": "30b7cdef",
    "afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)": "b47b2fb1",
    "beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": "b6a8b0fa",
    "beforeInitialize(address,(address,address,uint24,int24,address),uint160,bytes)": "3440d820",
    "beforeModifyPosition(address,(address,address,uint24,int24,address),(int24,int24,int256),bytes)": "fe9a6f45",
    "beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": "575e24b4",
    "getFee(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": "2ab7a3e2",
    "getHooksCalls()": "612c39b7",
    "initialize(address)": "c4d66de8",
    "lockAcquired(bytes)": "ab6291fe",
    "poolManager()": "dc4c90d3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"_poolManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hooks\",\"type\":\"address\"}],\"name\":\"HookAddressNotValid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HookNotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LockFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MustUseDynamicFee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPoolManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSelf\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"}],\"internalType\":\"struct IPoolManager.ModifyPositionParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterModifyPosition\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"}],\"internalType\":\"struct IPoolManager.ModifyPositionParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeModifyPosition\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHooksCalls\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"beforeInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeModifyPosition\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterModifyPosition\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeDonate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterDonate\",\"type\":\"bool\"}],\"internalType\":\"struct Hooks.Calls\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract VolatilityOracle\",\"name\":\"_volatilityOracle\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"lockAcquired\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolManager\",\"outputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"HookAddressNotValid(address)\":[{\"params\":{\"hooks\":\"The address of the hooks contract\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"HookAddressNotValid(address)\":[{\"notice\":\"Thrown if the address will not lead to the specified hook calls being called\"}]},\"kind\":\"user\",\"methods\":{\"poolManager()\":{\"notice\":\"The address of the pool manager\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Vanna.sol\":\"Vanna\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/v4-periphery/lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/v4-periphery/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/v4-periphery/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/v4-periphery/lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/src/\",\":v4-periphery/=lib/v4-periphery/contracts/\",\"lib/v4-periphery:v4-core/=lib/v4-periphery/lib/v4-core/contracts/\"]},\"sources\":{\"lib/v4-periphery/contracts/BaseHook.sol\":{\"keccak256\":\"0x10821f78780c0524a4c7d9d672dc05033f4576f5f692253d30e1cb69276e66bf\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://11762d13e86590c664d642c6d65756f8d28cb3a3e6dce5c9019e1a116abc7b9d\",\"dweb:/ipfs/QmTFpD8VkRGMUpd949aGhuPb4i9EU93cMqhkG2B6cGsbfc\"]},\"lib/v4-periphery/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x3d2d39f4752d473bac1769f12ff0f51a747312f72a37b29251e1b839fda9b72c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://240042567f343175d52fc2fcae92bc8d0aa4c637fc6b73361728c16a26b65ead\",\"dweb:/ipfs/QmUwNd4gTK3Au7Euo95AQqQYs7GFnj3Fmzt8obUc83cngh\"]},\"lib/v4-periphery/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xf66b7397bb70080f6f4ec77eecfda1814d04e47f70d55b0f22179619045f6835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b70065eda5adfda82cdec1258c13a660dfe9a403bba7df7abc320ca04770ebc7\",\"dweb:/ipfs/QmbW11jKKvA5HUrAR5P4YoDdWJLEGGM9MZu64YqwgFwgNn\"]},\"lib/v4-periphery/lib/v4-core/contracts/interfaces/IDynamicFeeManager.sol\":{\"keccak256\":\"0x025e7eb045536c46bb83e95cad52dea1c3ea9b9410c1f0588131b21e322b53d6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://dde2ca4c185f5a4dcc0c6e97b4402fa54372bfb6fbd9039f7be02ad3cd2e9ebd\",\"dweb:/ipfs/QmQueVoAB3eoLUdHhEkxmjxgMiyhhQVWsusn7YkWFNF9Y3\"]},\"lib/v4-periphery/lib/v4-core/contracts/interfaces/IFees.sol\":{\"keccak256\":\"0x2fb66160acff9b1a6031e3ada15e4271b25399d6b921dc17679cde1e50f566e2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7bb4c14e2f3bc0c92729b3fc24f57aaaaf9bd1930411aa937afd49e2c3811bfb\",\"dweb:/ipfs/QmP8kj9hvpDhWBrjuZUmxX7UAsbbkU6bceRKHdwg66MpPK\"]},\"lib/v4-periphery/lib/v4-core/contracts/interfaces/IHooks.sol\":{\"keccak256\":\"0x7263c9c8fef8b2346bebfd67956b287666a8c9e1f74131789650af4945ba4523\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ef70e4a9ec5d8721fa844216d752d4135d88ad4562a00d125ae158ce40748569\",\"dweb:/ipfs/QmSSRNcCmcvTSmm87hgAMsK3zqfcPkgemqm4JzaQf92PgM\"]},\"lib/v4-periphery/lib/v4-core/contracts/interfaces/IPoolManager.sol\":{\"keccak256\":\"0x31f2b212fe5305cf16057f7302c503b7a4f06eeeac0e0cf26aa5e1ab7801473f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://301793a0befb5799d4122c53cab244cb00809cb957f97ec27adc8863f39b125c\",\"dweb:/ipfs/QmW8k26vHN8MNGyEZmij9uNWjaNSQgMwhoWtbhYSXvmGCq\"]},\"lib/v4-periphery/lib/v4-core/contracts/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0x8dc5ee72426906aeb12f4ae6a2426df059491739bd5cbdb8ea4a3e26970436c6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f7e30dbbc972cb78d169c8845d6210d27490c8534e68a20d4f296b11ec727b92\",\"dweb:/ipfs/QmXBvaWaAnPW25YGVm2sMbf5mwrzLapUcqPnrNiiGGXxmA\"]},\"lib/v4-periphery/lib/v4-core/contracts/libraries/BitMath.sol\":{\"keccak256\":\"0x652cd36970d953b3067c766b3b0c0063d4c403eba7352df09ec10dcc868910d9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e357b092171edb755c8514b4b4ae758a8b43458c7a23409ebf5afd325fefa2be\",\"dweb:/ipfs/QmWKRWT2z15cVbVVDkjqdVnpf8Ck1jytcXbA7zCUevp7b6\"]},\"lib/v4-periphery/lib/v4-core/contracts/libraries/FeeLibrary.sol\":{\"keccak256\":\"0x9fc00b77978b617d1a9b5c9d024210b43ee5455682982703d3009bfafc1c12b4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://777acadfdbd1b3c01aa780b2dff49771ae6189e421b7e23be38c2db75b9c1267\",\"dweb:/ipfs/QmUR443r39JFuYjLi6zCWnW7r15u1gbmkuEd6e43Br4gyL\"]},\"lib/v4-periphery/lib/v4-core/contracts/libraries/FixedPoint128.sol\":{\"keccak256\":\"0x1f015a7a107f4c471985a958f1bfbc1710948f9bcd3786a02310bc0ad5080c69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a1cacac08675284f319d151f6bc5d1c66cf1d54c5dad1c620a2e1e1336cbb93a\",\"dweb:/ipfs/QmPf8vQ3mBqniKHwvS1DDEFrV5dJfZSL6mMi9JVy6omQaz\"]},\"lib/v4-periphery/lib/v4-core/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x7731aeeba692b0ca5dac8f27803ec9e5ce98795a554c09ae05c220861bd0314e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://963a8155e442d31c4541c387d333db0c02941ae3517e9173ad30ebcb4f6a14e9\",\"dweb:/ipfs/QmevAr8oG4WSoi5gBqQ53VzBuFbDKoZHfJwjuTmVhzm8Tc\"]},\"lib/v4-periphery/lib/v4-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x6d8760794ed38264579c5da7b2afe8ff5543de999180850bc08687b77dce36ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e72da6f868ba5f5c829f78f649286c6b5922a8cda0317dfbb156b8a4d27fb24\",\"dweb:/ipfs/QmUQDZciNFhy4AFGXfYvoy22ihPc7ehvypeRVQwvVcD3vJ\"]},\"lib/v4-periphery/lib/v4-core/contracts/libraries/Hooks.sol\":{\"keccak256\":\"0x5015985a12cecb006731861d738d79d489991ef64cddf648d5c4224c775bf28e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c34ab145698f6c7ab48a1f0315b7782fb2179f1643d47cfa620f6509d23e8092\",\"dweb:/ipfs/QmRzyb1F9KcXTEqHeLLMc4PHZzbN4VFbxg8bRzEX33Hpfq\"]},\"lib/v4-periphery/lib/v4-core/contracts/libraries/Pool.sol\":{\"keccak256\":\"0x57005bc70f6d8b7ec7398f1c38a9ad22d78db33ae3086965f6f3fc74b5842e81\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a01c7897184cc09a0cecc1e86c2a25e03e55d4db27af694d7c085f4126832ec3\",\"dweb:/ipfs/QmZ2EdPNc7vU1YPMVQ4ym9d5pkWPXhuqdToqX6UCgsHTHS\"]},\"lib/v4-periphery/lib/v4-core/contracts/libraries/Position.sol\":{\"keccak256\":\"0x1319e4c172e31427c3b3521dd3c9c9c3949da22e25c9919ae57c47a8c9328e43\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1e0885e8e035681836fe02213e165d1ab48cf2488cf6ba8f01964b4b026d2b46\",\"dweb:/ipfs/QmR4W3DZYYvctASLFnm7Sf4wk2L77gwNRrTS2mBqtiUaud\"]},\"lib/v4-periphery/lib/v4-core/contracts/libraries/SafeCast.sol\":{\"keccak256\":\"0xb459cbf9f2cda4c38c11916e888cc2afbe4297c5ae6f50a0976eb83ed0dc9b25\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5608698d33b18d3f49e3fa1fbdf6e7c6383378f7d53c914dcf14a0411cf7a79b\",\"dweb:/ipfs/QmbF4VWDcTPzH17aczU6eCUcqTp9Be7xiuBGB5TMWmtJAi\"]},\"lib/v4-periphery/lib/v4-core/contracts/libraries/SqrtPriceMath.sol\":{\"keccak256\":\"0x62cb03c7ce6ce037c82fa74e5aabb2431d6b4ddbca1458efdabf5d6af9ca6f90\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://206e025889f55aa8e5d9db2f846460394b54d6dc6d80a5e4ca1d4b70edd98188\",\"dweb:/ipfs/QmNSzKqtUDXHzgXXDjdNv3ZnHZE3LU4KhwNmkrcWtTRGqk\"]},\"lib/v4-periphery/lib/v4-core/contracts/libraries/SwapMath.sol\":{\"keccak256\":\"0xac5b75b36ff928e88cbec828bdc9db03e681cc3b337d5d7f6be9fd617b3fef7f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6aaea2ecabdb3fec93c7c6be19ea3a034cf396a59ab96f61c57b5214c04b5a6e\",\"dweb:/ipfs/QmYyd4ExT6xbvEHZTQBv9nZuvU6xjB6EN4uY8TmK8Tceqv\"]},\"lib/v4-periphery/lib/v4-core/contracts/libraries/TickBitmap.sol\":{\"keccak256\":\"0x7cccb8dff4c76da872a827f1549dc44cdff384d123e77a5361a02a31902bf15c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://88f850cd5bd2bbada4d9514f2516804392c7b23dc2cb541b74e9c88d0a351dcd\",\"dweb:/ipfs/QmZh9LvKUG23oFUZXAAa5gn77MguAbZ41VGjkES5U8N9Em\"]},\"lib/v4-periphery/lib/v4-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xadffea78a3eed37613b57766d87c0bdb9454d2df39de90d7a450e4a8b3207e56\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c5043430807061e5ccc82986c59b2e074457ff608111a8bd51b413ceaf661c78\",\"dweb:/ipfs/QmXjqKzCrngzidTRmuLUFvwNPqMKtd8xVFLVCycRfEQcWo\"]},\"lib/v4-periphery/lib/v4-core/contracts/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x2a8cb75af05f8557b698b089a0ab19e24279fffb7e87cddf5794404c7eaf1c69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://85f68e6d614205f3f0f55f6ac41805e3a7d523d95bda1c443f2e75444443ffe3\",\"dweb:/ipfs/QmdCheMqxWNx4CbxG5MH9BUQeSMeeXF6DHkf7Aax4duRUe\"]},\"lib/v4-periphery/lib/v4-core/contracts/types/BalanceDelta.sol\":{\"keccak256\":\"0xb88fc16f2ae715bd796e5cdb77c2297117f18ce2183288ae4680d7f20cce5f85\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://829baa2d4becbf8f0298fcaafb2305cf57bab5bcccdf8ac10d171bbb68c37e6f\",\"dweb:/ipfs/QmPs18e2YgwJECriyft46Rp7p9iECPEpkNXV1gom5NosfF\"]},\"lib/v4-periphery/lib/v4-core/contracts/types/Currency.sol\":{\"keccak256\":\"0x008a7aeff6cdb7709a8e5893c9e9895a8a7ad594a0605586174e576b9888ff80\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c773b120bacb261695d4e00973ff25359dbf3aee071d19268833cc76e71f1aa2\",\"dweb:/ipfs/QmawinVYJJSWcQH4Lo5Hh7ond58RHAjeCL13FE47a5Egcw\"]},\"lib/v4-periphery/lib/v4-core/contracts/types/PoolId.sol\":{\"keccak256\":\"0xd28e4ac2a0874b5372ab3873a263701ce625a840fc563c63d5ad8f7b3272f325\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0575161cdbe0c3ef8fa023a5f606563ec793bad863446822bdf310bce8dbcccd\",\"dweb:/ipfs/QmUM26Umcr3LEfM2sZ6eGtgBa2KmQde6Ea6898n8tt38mv\"]},\"lib/v4-periphery/lib/v4-core/contracts/types/PoolKey.sol\":{\"keccak256\":\"0x4928c59e15db5af3bff68f4d9243ebe11a1dc4a4cbfa57c564db376086a902ce\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://235245bf768c3b708be7837f6aa3bb6bcab7b25036df99e2cc257363350f6ea7\",\"dweb:/ipfs/QmWPurWV2vYoaVNxZyj4DkCqS8Aode5U9JE8WHmbyVR8jH\"]},\"src/Vanna.sol\":{\"keccak256\":\"0x7488c4c05ecb3511680502b04583d4496e42116381d2446a574d9cbaab2faed2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://702129a39755d49982df1ec30058772956df683505ee8165a1e9b5dc9a264de1\",\"dweb:/ipfs/QmdPE4djkpnFXqNjGbq5Ft8zfjLaV61tUr29udwLak7Qk6\"]},\"src/VolatilityOracle.sol\":{\"keccak256\":\"0x5e8c057c7f6cc97e797933330835513628ae9175f407d92c20dfb8fba1301198\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://beb1c529d42cdfe29e9f6375df6b892c896fa033d7e7894bff9185cb1649e51f\",\"dweb:/ipfs/Qmf6ozoKJCjb5tfowcNJ2UQTLYyBY4UpgyzxhZsYb2VE5J\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IPoolManager",
              "name": "_poolManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "hooks",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "HookAddressNotValid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "HookNotImplemented"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPool"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LockFailure"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MustUseDynamicFee"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotPoolManager"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotSelf"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "struct PoolKey",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "afterDonate",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "struct PoolKey",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint160",
              "name": "",
              "type": "uint160"
            },
            {
              "internalType": "int24",
              "name": "",
              "type": "int24"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "afterInitialize",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "struct PoolKey",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct IPoolManager.ModifyPositionParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "int256",
                  "name": "liquidityDelta",
                  "type": "int256"
                }
              ]
            },
            {
              "internalType": "BalanceDelta",
              "name": "",
              "type": "int256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "afterModifyPosition",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "struct PoolKey",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct IPoolManager.SwapParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "zeroForOne",
                  "type": "bool"
                },
                {
                  "internalType": "int256",
                  "name": "amountSpecified",
                  "type": "int256"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceLimitX96",
                  "type": "uint160"
                }
              ]
            },
            {
              "internalType": "BalanceDelta",
              "name": "",
              "type": "int256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "afterSwap",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "struct PoolKey",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "beforeDonate",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "struct PoolKey",
              "name": "key",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint160",
              "name": "",
              "type": "uint160"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "beforeInitialize",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "struct PoolKey",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct IPoolManager.ModifyPositionParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "int256",
                  "name": "liquidityDelta",
                  "type": "int256"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "beforeModifyPosition",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "struct PoolKey",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct IPoolManager.SwapParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "zeroForOne",
                  "type": "bool"
                },
                {
                  "internalType": "int256",
                  "name": "amountSpecified",
                  "type": "int256"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceLimitX96",
                  "type": "uint160"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "beforeSwap",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "struct PoolKey",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct IPoolManager.SwapParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "zeroForOne",
                  "type": "bool"
                },
                {
                  "internalType": "int256",
                  "name": "amountSpecified",
                  "type": "int256"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceLimitX96",
                  "type": "uint160"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFee",
          "outputs": [
            {
              "internalType": "uint24",
              "name": "",
              "type": "uint24"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getHooksCalls",
          "outputs": [
            {
              "internalType": "struct Hooks.Calls",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "beforeInitialize",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "afterInitialize",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "beforeModifyPosition",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "afterModifyPosition",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "beforeSwap",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "afterSwap",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "beforeDonate",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "afterDonate",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract VolatilityOracle",
              "name": "_volatilityOracle",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lockAcquired",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "poolManager",
          "outputs": [
            {
              "internalType": "contract IPoolManager",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "poolManager()": {
            "notice": "The address of the pool manager"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/",
        "@openzeppelin/contracts/=lib/v4-periphery/lib/openzeppelin-contracts/contracts/",
        "@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/v4-periphery/lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-gas-snapshot/=lib/v4-periphery/lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/",
        "openzeppelin-contracts/=lib/v4-periphery/lib/openzeppelin-contracts/",
        "openzeppelin/=lib/v4-periphery/lib/openzeppelin-contracts/contracts/",
        "solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/src/",
        "v4-periphery/=lib/v4-periphery/contracts/",
        "lib/v4-periphery:v4-core/=lib/v4-periphery/lib/v4-core/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Vanna.sol": "Vanna"
      },
      "libraries": {}
    },
    "sources": {
      "lib/v4-periphery/contracts/BaseHook.sol": {
        "keccak256": "0x10821f78780c0524a4c7d9d672dc05033f4576f5f692253d30e1cb69276e66bf",
        "urls": [
          "bzz-raw://11762d13e86590c664d642c6d65756f8d28cb3a3e6dce5c9019e1a116abc7b9d",
          "dweb:/ipfs/QmTFpD8VkRGMUpd949aGhuPb4i9EU93cMqhkG2B6cGsbfc"
        ],
        "license": "UNLICENSED"
      },
      "lib/v4-periphery/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x3d2d39f4752d473bac1769f12ff0f51a747312f72a37b29251e1b839fda9b72c",
        "urls": [
          "bzz-raw://240042567f343175d52fc2fcae92bc8d0aa4c637fc6b73361728c16a26b65ead",
          "dweb:/ipfs/QmUwNd4gTK3Au7Euo95AQqQYs7GFnj3Fmzt8obUc83cngh"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0xf66b7397bb70080f6f4ec77eecfda1814d04e47f70d55b0f22179619045f6835",
        "urls": [
          "bzz-raw://b70065eda5adfda82cdec1258c13a660dfe9a403bba7df7abc320ca04770ebc7",
          "dweb:/ipfs/QmbW11jKKvA5HUrAR5P4YoDdWJLEGGM9MZu64YqwgFwgNn"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/lib/v4-core/contracts/interfaces/IDynamicFeeManager.sol": {
        "keccak256": "0x025e7eb045536c46bb83e95cad52dea1c3ea9b9410c1f0588131b21e322b53d6",
        "urls": [
          "bzz-raw://dde2ca4c185f5a4dcc0c6e97b4402fa54372bfb6fbd9039f7be02ad3cd2e9ebd",
          "dweb:/ipfs/QmQueVoAB3eoLUdHhEkxmjxgMiyhhQVWsusn7YkWFNF9Y3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-periphery/lib/v4-core/contracts/interfaces/IFees.sol": {
        "keccak256": "0x2fb66160acff9b1a6031e3ada15e4271b25399d6b921dc17679cde1e50f566e2",
        "urls": [
          "bzz-raw://7bb4c14e2f3bc0c92729b3fc24f57aaaaf9bd1930411aa937afd49e2c3811bfb",
          "dweb:/ipfs/QmP8kj9hvpDhWBrjuZUmxX7UAsbbkU6bceRKHdwg66MpPK"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-periphery/lib/v4-core/contracts/interfaces/IHooks.sol": {
        "keccak256": "0x7263c9c8fef8b2346bebfd67956b287666a8c9e1f74131789650af4945ba4523",
        "urls": [
          "bzz-raw://ef70e4a9ec5d8721fa844216d752d4135d88ad4562a00d125ae158ce40748569",
          "dweb:/ipfs/QmSSRNcCmcvTSmm87hgAMsK3zqfcPkgemqm4JzaQf92PgM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-periphery/lib/v4-core/contracts/interfaces/IPoolManager.sol": {
        "keccak256": "0x31f2b212fe5305cf16057f7302c503b7a4f06eeeac0e0cf26aa5e1ab7801473f",
        "urls": [
          "bzz-raw://301793a0befb5799d4122c53cab244cb00809cb957f97ec27adc8863f39b125c",
          "dweb:/ipfs/QmW8k26vHN8MNGyEZmij9uNWjaNSQgMwhoWtbhYSXvmGCq"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-periphery/lib/v4-core/contracts/interfaces/external/IERC20Minimal.sol": {
        "keccak256": "0x8dc5ee72426906aeb12f4ae6a2426df059491739bd5cbdb8ea4a3e26970436c6",
        "urls": [
          "bzz-raw://f7e30dbbc972cb78d169c8845d6210d27490c8534e68a20d4f296b11ec727b92",
          "dweb:/ipfs/QmXBvaWaAnPW25YGVm2sMbf5mwrzLapUcqPnrNiiGGXxmA"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-periphery/lib/v4-core/contracts/libraries/BitMath.sol": {
        "keccak256": "0x652cd36970d953b3067c766b3b0c0063d4c403eba7352df09ec10dcc868910d9",
        "urls": [
          "bzz-raw://e357b092171edb755c8514b4b4ae758a8b43458c7a23409ebf5afd325fefa2be",
          "dweb:/ipfs/QmWKRWT2z15cVbVVDkjqdVnpf8Ck1jytcXbA7zCUevp7b6"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-periphery/lib/v4-core/contracts/libraries/FeeLibrary.sol": {
        "keccak256": "0x9fc00b77978b617d1a9b5c9d024210b43ee5455682982703d3009bfafc1c12b4",
        "urls": [
          "bzz-raw://777acadfdbd1b3c01aa780b2dff49771ae6189e421b7e23be38c2db75b9c1267",
          "dweb:/ipfs/QmUR443r39JFuYjLi6zCWnW7r15u1gbmkuEd6e43Br4gyL"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-periphery/lib/v4-core/contracts/libraries/FixedPoint128.sol": {
        "keccak256": "0x1f015a7a107f4c471985a958f1bfbc1710948f9bcd3786a02310bc0ad5080c69",
        "urls": [
          "bzz-raw://a1cacac08675284f319d151f6bc5d1c66cf1d54c5dad1c620a2e1e1336cbb93a",
          "dweb:/ipfs/QmPf8vQ3mBqniKHwvS1DDEFrV5dJfZSL6mMi9JVy6omQaz"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-periphery/lib/v4-core/contracts/libraries/FixedPoint96.sol": {
        "keccak256": "0x7731aeeba692b0ca5dac8f27803ec9e5ce98795a554c09ae05c220861bd0314e",
        "urls": [
          "bzz-raw://963a8155e442d31c4541c387d333db0c02941ae3517e9173ad30ebcb4f6a14e9",
          "dweb:/ipfs/QmevAr8oG4WSoi5gBqQ53VzBuFbDKoZHfJwjuTmVhzm8Tc"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-periphery/lib/v4-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0x6d8760794ed38264579c5da7b2afe8ff5543de999180850bc08687b77dce36ea",
        "urls": [
          "bzz-raw://0e72da6f868ba5f5c829f78f649286c6b5922a8cda0317dfbb156b8a4d27fb24",
          "dweb:/ipfs/QmUQDZciNFhy4AFGXfYvoy22ihPc7ehvypeRVQwvVcD3vJ"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/lib/v4-core/contracts/libraries/Hooks.sol": {
        "keccak256": "0x5015985a12cecb006731861d738d79d489991ef64cddf648d5c4224c775bf28e",
        "urls": [
          "bzz-raw://c34ab145698f6c7ab48a1f0315b7782fb2179f1643d47cfa620f6509d23e8092",
          "dweb:/ipfs/QmRzyb1F9KcXTEqHeLLMc4PHZzbN4VFbxg8bRzEX33Hpfq"
        ],
        "license": "BUSL-1.1"
      },
      "lib/v4-periphery/lib/v4-core/contracts/libraries/Pool.sol": {
        "keccak256": "0x57005bc70f6d8b7ec7398f1c38a9ad22d78db33ae3086965f6f3fc74b5842e81",
        "urls": [
          "bzz-raw://a01c7897184cc09a0cecc1e86c2a25e03e55d4db27af694d7c085f4126832ec3",
          "dweb:/ipfs/QmZ2EdPNc7vU1YPMVQ4ym9d5pkWPXhuqdToqX6UCgsHTHS"
        ],
        "license": "BUSL-1.1"
      },
      "lib/v4-periphery/lib/v4-core/contracts/libraries/Position.sol": {
        "keccak256": "0x1319e4c172e31427c3b3521dd3c9c9c3949da22e25c9919ae57c47a8c9328e43",
        "urls": [
          "bzz-raw://1e0885e8e035681836fe02213e165d1ab48cf2488cf6ba8f01964b4b026d2b46",
          "dweb:/ipfs/QmR4W3DZYYvctASLFnm7Sf4wk2L77gwNRrTS2mBqtiUaud"
        ],
        "license": "BUSL-1.1"
      },
      "lib/v4-periphery/lib/v4-core/contracts/libraries/SafeCast.sol": {
        "keccak256": "0xb459cbf9f2cda4c38c11916e888cc2afbe4297c5ae6f50a0976eb83ed0dc9b25",
        "urls": [
          "bzz-raw://5608698d33b18d3f49e3fa1fbdf6e7c6383378f7d53c914dcf14a0411cf7a79b",
          "dweb:/ipfs/QmbF4VWDcTPzH17aczU6eCUcqTp9Be7xiuBGB5TMWmtJAi"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-periphery/lib/v4-core/contracts/libraries/SqrtPriceMath.sol": {
        "keccak256": "0x62cb03c7ce6ce037c82fa74e5aabb2431d6b4ddbca1458efdabf5d6af9ca6f90",
        "urls": [
          "bzz-raw://206e025889f55aa8e5d9db2f846460394b54d6dc6d80a5e4ca1d4b70edd98188",
          "dweb:/ipfs/QmNSzKqtUDXHzgXXDjdNv3ZnHZE3LU4KhwNmkrcWtTRGqk"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-periphery/lib/v4-core/contracts/libraries/SwapMath.sol": {
        "keccak256": "0xac5b75b36ff928e88cbec828bdc9db03e681cc3b337d5d7f6be9fd617b3fef7f",
        "urls": [
          "bzz-raw://6aaea2ecabdb3fec93c7c6be19ea3a034cf396a59ab96f61c57b5214c04b5a6e",
          "dweb:/ipfs/QmYyd4ExT6xbvEHZTQBv9nZuvU6xjB6EN4uY8TmK8Tceqv"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-periphery/lib/v4-core/contracts/libraries/TickBitmap.sol": {
        "keccak256": "0x7cccb8dff4c76da872a827f1549dc44cdff384d123e77a5361a02a31902bf15c",
        "urls": [
          "bzz-raw://88f850cd5bd2bbada4d9514f2516804392c7b23dc2cb541b74e9c88d0a351dcd",
          "dweb:/ipfs/QmZh9LvKUG23oFUZXAAa5gn77MguAbZ41VGjkES5U8N9Em"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-periphery/lib/v4-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0xadffea78a3eed37613b57766d87c0bdb9454d2df39de90d7a450e4a8b3207e56",
        "urls": [
          "bzz-raw://c5043430807061e5ccc82986c59b2e074457ff608111a8bd51b413ceaf661c78",
          "dweb:/ipfs/QmXjqKzCrngzidTRmuLUFvwNPqMKtd8xVFLVCycRfEQcWo"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-periphery/lib/v4-core/contracts/libraries/UnsafeMath.sol": {
        "keccak256": "0x2a8cb75af05f8557b698b089a0ab19e24279fffb7e87cddf5794404c7eaf1c69",
        "urls": [
          "bzz-raw://85f68e6d614205f3f0f55f6ac41805e3a7d523d95bda1c443f2e75444443ffe3",
          "dweb:/ipfs/QmdCheMqxWNx4CbxG5MH9BUQeSMeeXF6DHkf7Aax4duRUe"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-periphery/lib/v4-core/contracts/types/BalanceDelta.sol": {
        "keccak256": "0xb88fc16f2ae715bd796e5cdb77c2297117f18ce2183288ae4680d7f20cce5f85",
        "urls": [
          "bzz-raw://829baa2d4becbf8f0298fcaafb2305cf57bab5bcccdf8ac10d171bbb68c37e6f",
          "dweb:/ipfs/QmPs18e2YgwJECriyft46Rp7p9iECPEpkNXV1gom5NosfF"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-periphery/lib/v4-core/contracts/types/Currency.sol": {
        "keccak256": "0x008a7aeff6cdb7709a8e5893c9e9895a8a7ad594a0605586174e576b9888ff80",
        "urls": [
          "bzz-raw://c773b120bacb261695d4e00973ff25359dbf3aee071d19268833cc76e71f1aa2",
          "dweb:/ipfs/QmawinVYJJSWcQH4Lo5Hh7ond58RHAjeCL13FE47a5Egcw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-periphery/lib/v4-core/contracts/types/PoolId.sol": {
        "keccak256": "0xd28e4ac2a0874b5372ab3873a263701ce625a840fc563c63d5ad8f7b3272f325",
        "urls": [
          "bzz-raw://0575161cdbe0c3ef8fa023a5f606563ec793bad863446822bdf310bce8dbcccd",
          "dweb:/ipfs/QmUM26Umcr3LEfM2sZ6eGtgBa2KmQde6Ea6898n8tt38mv"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-periphery/lib/v4-core/contracts/types/PoolKey.sol": {
        "keccak256": "0x4928c59e15db5af3bff68f4d9243ebe11a1dc4a4cbfa57c564db376086a902ce",
        "urls": [
          "bzz-raw://235245bf768c3b708be7837f6aa3bb6bcab7b25036df99e2cc257363350f6ea7",
          "dweb:/ipfs/QmWPurWV2vYoaVNxZyj4DkCqS8Aode5U9JE8WHmbyVR8jH"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/Vanna.sol": {
        "keccak256": "0x7488c4c05ecb3511680502b04583d4496e42116381d2446a574d9cbaab2faed2",
        "urls": [
          "bzz-raw://702129a39755d49982df1ec30058772956df683505ee8165a1e9b5dc9a264de1",
          "dweb:/ipfs/QmdPE4djkpnFXqNjGbq5Ft8zfjLaV61tUr29udwLak7Qk6"
        ],
        "license": "MIT"
      },
      "src/VolatilityOracle.sol": {
        "keccak256": "0x5e8c057c7f6cc97e797933330835513628ae9175f407d92c20dfb8fba1301198",
        "urls": [
          "bzz-raw://beb1c529d42cdfe29e9f6375df6b892c896fa033d7e7894bff9185cb1649e51f",
          "dweb:/ipfs/Qmf6ozoKJCjb5tfowcNJ2UQTLYyBY4UpgyzxhZsYb2VE5J"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Vanna.sol",
    "id": 37596,
    "exportedSymbols": {
      "BaseHook": [
        24413
      ],
      "FeeLibrary": [
        31148
      ],
      "Hooks": [
        31741
      ],
      "IDynamicFeeManager": [
        30096
      ],
      "IPoolManager": [
        30685
      ],
      "PoolKey": [
        37159
      ],
      "Vanna": [
        37595
      ],
      "VolatilityOracle": [
        37839
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2288:65",
    "nodes": [
      {
        "id": 37434,
        "nodeType": "PragmaDirective",
        "src": "32:24:65",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 37436,
        "nodeType": "ImportDirective",
        "src": "58:84:65",
        "nodes": [],
        "absolutePath": "lib/v4-periphery/lib/v4-core/contracts/interfaces/IPoolManager.sol",
        "file": "@uniswap/v4-core/contracts/interfaces/IPoolManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37596,
        "sourceUnit": 30686,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37435,
              "name": "IPoolManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30685,
              "src": "66:12:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37438,
        "nodeType": "ImportDirective",
        "src": "143:96:65",
        "nodes": [],
        "absolutePath": "lib/v4-periphery/lib/v4-core/contracts/interfaces/IDynamicFeeManager.sol",
        "file": "@uniswap/v4-core/contracts/interfaces/IDynamicFeeManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37596,
        "sourceUnit": 30097,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37437,
              "name": "IDynamicFeeManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30096,
              "src": "151:18:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37440,
        "nodeType": "ImportDirective",
        "src": "240:69:65",
        "nodes": [],
        "absolutePath": "lib/v4-periphery/lib/v4-core/contracts/libraries/Hooks.sol",
        "file": "@uniswap/v4-core/contracts/libraries/Hooks.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37596,
        "sourceUnit": 31742,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37439,
              "name": "Hooks",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31741,
              "src": "248:5:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37442,
        "nodeType": "ImportDirective",
        "src": "310:79:65",
        "nodes": [],
        "absolutePath": "lib/v4-periphery/lib/v4-core/contracts/libraries/FeeLibrary.sol",
        "file": "@uniswap/v4-core/contracts/libraries/FeeLibrary.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37596,
        "sourceUnit": 31149,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37441,
              "name": "FeeLibrary",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31148,
              "src": "318:10:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37444,
        "nodeType": "ImportDirective",
        "src": "390:51:65",
        "nodes": [],
        "absolutePath": "lib/v4-periphery/contracts/BaseHook.sol",
        "file": "v4-periphery/BaseHook.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37596,
        "sourceUnit": 24414,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37443,
              "name": "BaseHook",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24413,
              "src": "398:8:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37446,
        "nodeType": "ImportDirective",
        "src": "442:69:65",
        "nodes": [],
        "absolutePath": "lib/v4-periphery/lib/v4-core/contracts/types/PoolKey.sol",
        "file": "@uniswap/v4-core/contracts/types/PoolKey.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37596,
        "sourceUnit": 37160,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37445,
              "name": "PoolKey",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37159,
              "src": "450:7:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37448,
        "nodeType": "ImportDirective",
        "src": "512:61:65",
        "nodes": [],
        "absolutePath": "src/VolatilityOracle.sol",
        "file": "../src/VolatilityOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37596,
        "sourceUnit": 37840,
        "symbolAliases": [
          {
            "foreign": {
              "id": 37447,
              "name": "VolatilityOracle",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37839,
              "src": "520:16:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 37595,
        "nodeType": "ContractDefinition",
        "src": "575:1744:65",
        "nodes": [
          {
            "id": 37455,
            "nodeType": "UsingForDirective",
            "src": "628:28:65",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 37453,
              "name": "FeeLibrary",
              "nameLocations": [
                "634:10:65"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31148,
              "src": "634:10:65"
            },
            "typeName": {
              "id": 37454,
              "name": "uint24",
              "nodeType": "ElementaryTypeName",
              "src": "649:6:65",
              "typeDescriptions": {
                "typeIdentifier": "t_uint24",
                "typeString": "uint24"
              }
            }
          },
          {
            "id": 37457,
            "nodeType": "ErrorDefinition",
            "src": "662:26:65",
            "nodes": [],
            "errorSelector": "ad9eb4f8",
            "name": "MustUseDynamicFee",
            "nameLocation": "668:17:65",
            "parameters": {
              "id": 37456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "685:2:65"
            }
          },
          {
            "id": 37459,
            "nodeType": "VariableDeclaration",
            "src": "694:24:65",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "initialized",
            "nameLocation": "707:11:65",
            "scope": 37595,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 37458,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "694:4:65",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "id": 37461,
            "nodeType": "VariableDeclaration",
            "src": "724:22:65",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "deployTimestamp",
            "nameLocation": "731:15:65",
            "scope": 37595,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 37460,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "724:6:65",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 37464,
            "nodeType": "VariableDeclaration",
            "src": "752:33:65",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "volatilityOracle",
            "nameLocation": "769:16:65",
            "scope": 37595,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_VolatilityOracle_$37839",
              "typeString": "contract VolatilityOracle"
            },
            "typeName": {
              "id": 37463,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37462,
                "name": "VolatilityOracle",
                "nameLocations": [
                  "752:16:65"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 37839,
                "src": "752:16:65"
              },
              "referencedDeclaration": 37839,
              "src": "752:16:65",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VolatilityOracle_$37839",
                "typeString": "contract VolatilityOracle"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 37485,
            "nodeType": "FunctionDefinition",
            "src": "792:198:65",
            "nodes": [],
            "body": {
              "id": 37484,
              "nodeType": "Block",
              "src": "855:135:65",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "873:12:65",
                        "subExpression": {
                          "id": 37471,
                          "name": "initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37459,
                          "src": "874:11:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920696e697469616c697a6564",
                        "id": 37473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "887:21:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
                          "typeString": "literal_string \"Already initialized\""
                        },
                        "value": "Already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
                          "typeString": "literal_string \"Already initialized\""
                        }
                      ],
                      "id": 37470,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "865:7:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "865:44:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37475,
                  "nodeType": "ExpressionStatement",
                  "src": "865:44:65"
                },
                {
                  "expression": {
                    "id": 37478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37476,
                      "name": "initialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37459,
                      "src": "919:11:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 37477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "933:4:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "919:18:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37479,
                  "nodeType": "ExpressionStatement",
                  "src": "919:18:65"
                },
                {
                  "expression": {
                    "id": 37482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37480,
                      "name": "volatilityOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37464,
                      "src": "947:16:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VolatilityOracle_$37839",
                        "typeString": "contract VolatilityOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 37481,
                      "name": "_volatilityOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37467,
                      "src": "966:17:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VolatilityOracle_$37839",
                        "typeString": "contract VolatilityOracle"
                      }
                    },
                    "src": "947:36:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VolatilityOracle_$37839",
                      "typeString": "contract VolatilityOracle"
                    }
                  },
                  "id": 37483,
                  "nodeType": "ExpressionStatement",
                  "src": "947:36:65"
                }
              ]
            },
            "functionSelector": "c4d66de8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "801:10:65",
            "parameters": {
              "id": 37468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37467,
                  "mutability": "mutable",
                  "name": "_volatilityOracle",
                  "nameLocation": "829:17:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 37485,
                  "src": "812:34:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_VolatilityOracle_$37839",
                    "typeString": "contract VolatilityOracle"
                  },
                  "typeName": {
                    "id": 37466,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37465,
                      "name": "VolatilityOracle",
                      "nameLocations": [
                        "812:16:65"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 37839,
                      "src": "812:16:65"
                    },
                    "referencedDeclaration": 37839,
                    "src": "812:16:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VolatilityOracle_$37839",
                      "typeString": "contract VolatilityOracle"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "811:36:65"
            },
            "returnParameters": {
              "id": 37469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "855:0:65"
            },
            "scope": 37595,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 37517,
            "nodeType": "FunctionDefinition",
            "src": "996:316:65",
            "nodes": [],
            "body": {
              "id": 37516,
              "nodeType": "Block",
              "src": "1158:154:65",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37501,
                        "name": "initialized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37459,
                        "src": "1176:11:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420696e697469616c697a6564",
                        "id": 37502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1189:17:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ae2314e839d4d9cfe442dd3a2386a5c83b76bbc48be45cca60d84c71c4359b2",
                          "typeString": "literal_string \"Not initialized\""
                        },
                        "value": "Not initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ae2314e839d4d9cfe442dd3a2386a5c83b76bbc48be45cca60d84c71c4359b2",
                          "typeString": "literal_string \"Not initialized\""
                        }
                      ],
                      "id": 37500,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1168:7:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1168:39:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37504,
                  "nodeType": "ExpressionStatement",
                  "src": "1168:39:65"
                },
                {
                  "assignments": [
                    37506
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37506,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "1224:3:65",
                      "nodeType": "VariableDeclaration",
                      "scope": 37516,
                      "src": "1217:10:65",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 37505,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "1217:6:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37513,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 37509,
                            "name": "volatilityOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37464,
                            "src": "1237:16:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VolatilityOracle_$37839",
                              "typeString": "contract VolatilityOracle"
                            }
                          },
                          "id": 37510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1254:13:65",
                          "memberName": "getVolatility",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37838,
                          "src": "1237:30:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 37511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1237:32:65",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1230:6:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint24_$",
                        "typeString": "type(uint24)"
                      },
                      "typeName": {
                        "id": 37507,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "1230:6:65",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 37512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1230:40:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1217:53:65"
                },
                {
                  "expression": {
                    "id": 37514,
                    "name": "fee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37506,
                    "src": "1287:3:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "functionReturnParameters": 37499,
                  "id": 37515,
                  "nodeType": "Return",
                  "src": "1280:10:65"
                }
              ]
            },
            "baseFunctions": [
              30095
            ],
            "functionSelector": "2ab7a3e2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFee",
            "nameLocation": "1005:6:65",
            "parameters": {
              "id": 37496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37487,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37517,
                  "src": "1021:7:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1021:7:65",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37490,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37517,
                  "src": "1038:16:65",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PoolKey_$37159_calldata_ptr",
                    "typeString": "struct PoolKey"
                  },
                  "typeName": {
                    "id": 37489,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37488,
                      "name": "PoolKey",
                      "nameLocations": [
                        "1038:7:65"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 37159,
                      "src": "1038:7:65"
                    },
                    "referencedDeclaration": 37159,
                    "src": "1038:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolKey_$37159_storage_ptr",
                      "typeString": "struct PoolKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37493,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37517,
                  "src": "1064:32:65",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SwapParams_$30590_calldata_ptr",
                    "typeString": "struct IPoolManager.SwapParams"
                  },
                  "typeName": {
                    "id": 37492,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37491,
                      "name": "IPoolManager.SwapParams",
                      "nameLocations": [
                        "1064:12:65",
                        "1077:10:65"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30590,
                      "src": "1064:23:65"
                    },
                    "referencedDeclaration": 30590,
                    "src": "1064:23:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SwapParams_$30590_storage_ptr",
                      "typeString": "struct IPoolManager.SwapParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37495,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37517,
                  "src": "1106:14:65",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 37494,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1106:5:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1011:115:65"
            },
            "returnParameters": {
              "id": 37499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37498,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37517,
                  "src": "1150:6:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 37497,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1150:6:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1149:8:65"
            },
            "scope": 37595,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 37530,
            "nodeType": "FunctionDefinition",
            "src": "1343:113:65",
            "nodes": [],
            "body": {
              "id": 37529,
              "nodeType": "Block",
              "src": "1409:47:65",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 37525,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "1433:5:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 37526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1439:9:65",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "1433:15:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1426:6:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint32_$",
                        "typeString": "type(uint32)"
                      },
                      "typeName": {
                        "id": 37523,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1426:6:65",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 37527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1426:23:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 37522,
                  "id": 37528,
                  "nodeType": "Return",
                  "src": "1419:30:65"
                }
              ]
            },
            "documentation": {
              "id": 37518,
              "nodeType": "StructuredDocumentation",
              "src": "1318:20:65",
              "text": "@dev For mocking"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_blockTimestamp",
            "nameLocation": "1352:15:65",
            "parameters": {
              "id": 37519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1367:2:65"
            },
            "returnParameters": {
              "id": 37522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37521,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37530,
                  "src": "1401:6:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 37520,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1401:6:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1400:8:65"
            },
            "scope": 37595,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 37545,
            "nodeType": "FunctionDefinition",
            "src": "1462:114:65",
            "nodes": [],
            "body": {
              "id": 37544,
              "nodeType": "Block",
              "src": "1524:52:65",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 37542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37539,
                      "name": "deployTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37461,
                      "src": "1534:15:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 37540,
                        "name": "_blockTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37530,
                        "src": "1552:15:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint32_$",
                          "typeString": "function () view returns (uint32)"
                        }
                      },
                      "id": 37541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1552:17:65",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "1534:35:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 37543,
                  "nodeType": "ExpressionStatement",
                  "src": "1534:35:65"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 37536,
                    "name": "_poolManager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37533,
                    "src": "1510:12:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPoolManager_$30685",
                      "typeString": "contract IPoolManager"
                    }
                  }
                ],
                "id": 37537,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 37535,
                  "name": "BaseHook",
                  "nameLocations": [
                    "1501:8:65"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24413,
                  "src": "1501:8:65"
                },
                "nodeType": "ModifierInvocation",
                "src": "1501:22:65"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 37534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37533,
                  "mutability": "mutable",
                  "name": "_poolManager",
                  "nameLocation": "1487:12:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 37545,
                  "src": "1474:25:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPoolManager_$30685",
                    "typeString": "contract IPoolManager"
                  },
                  "typeName": {
                    "id": 37532,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37531,
                      "name": "IPoolManager",
                      "nameLocations": [
                        "1474:12:65"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30685,
                      "src": "1474:12:65"
                    },
                    "referencedDeclaration": 30685,
                    "src": "1474:12:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPoolManager_$30685",
                      "typeString": "contract IPoolManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1473:27:65"
            },
            "returnParameters": {
              "id": 37538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1524:0:65"
            },
            "scope": 37595,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 37565,
            "nodeType": "FunctionDefinition",
            "src": "1582:449:65",
            "nodes": [],
            "body": {
              "id": 37564,
              "nodeType": "Block",
              "src": "1657:374:65",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 37554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1734:4:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 37555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1773:5:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 37556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1818:5:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 37557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1862:5:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 37558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1897:5:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 37559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1931:5:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 37560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1968:5:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 37561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2004:5:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 37552,
                        "name": "Hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31741,
                        "src": "1686:5:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Hooks_$31741_$",
                          "typeString": "type(library Hooks)"
                        }
                      },
                      "id": 37553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1692:5:65",
                      "memberName": "Calls",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31406,
                      "src": "1686:11:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Calls_$31406_storage_ptr_$",
                        "typeString": "type(struct Hooks.Calls storage pointer)"
                      }
                    },
                    "id": 37562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "1716:16:65",
                      "1756:15:65",
                      "1796:20:65",
                      "1841:19:65",
                      "1885:10:65",
                      "1920:9:65",
                      "1954:12:65",
                      "1991:11:65"
                    ],
                    "names": [
                      "beforeInitialize",
                      "afterInitialize",
                      "beforeModifyPosition",
                      "afterModifyPosition",
                      "beforeSwap",
                      "afterSwap",
                      "beforeDonate",
                      "afterDonate"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1686:338:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Calls_$31406_memory_ptr",
                      "typeString": "struct Hooks.Calls memory"
                    }
                  },
                  "functionReturnParameters": 37551,
                  "id": 37563,
                  "nodeType": "Return",
                  "src": "1667:357:65"
                }
              ]
            },
            "baseFunctions": [
              24202
            ],
            "functionSelector": "612c39b7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHooksCalls",
            "nameLocation": "1591:13:65",
            "overrides": {
              "id": 37547,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1619:8:65"
            },
            "parameters": {
              "id": 37546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1604:2:65"
            },
            "returnParameters": {
              "id": 37551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37550,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37565,
                  "src": "1637:18:65",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Calls_$31406_memory_ptr",
                    "typeString": "struct Hooks.Calls"
                  },
                  "typeName": {
                    "id": 37549,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37548,
                      "name": "Hooks.Calls",
                      "nameLocations": [
                        "1637:5:65",
                        "1643:5:65"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31406,
                      "src": "1637:11:65"
                    },
                    "referencedDeclaration": 31406,
                    "src": "1637:11:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Calls_$31406_storage_ptr",
                      "typeString": "struct Hooks.Calls"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1636:20:65"
            },
            "scope": 37595,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 37594,
            "nodeType": "FunctionDefinition",
            "src": "2037:280:65",
            "nodes": [],
            "body": {
              "id": 37593,
              "nodeType": "Block",
              "src": "2197:120:65",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 37584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2211:23:65",
                    "subExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "expression": {
                            "id": 37580,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37570,
                            "src": "2212:3:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolKey_$37159_calldata_ptr",
                              "typeString": "struct PoolKey calldata"
                            }
                          },
                          "id": 37581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2216:3:65",
                          "memberName": "fee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37151,
                          "src": "2212:7:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "id": 37582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2220:12:65",
                        "memberName": "isDynamicFee",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31093,
                        "src": "2212:20:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint24_$returns$_t_bool_$attached_to$_t_uint24_$",
                          "typeString": "function (uint24) pure returns (bool)"
                        }
                      },
                      "id": 37583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2212:22:65",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37588,
                  "nodeType": "IfStatement",
                  "src": "2207:55:65",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 37585,
                        "name": "MustUseDynamicFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37457,
                        "src": "2243:17:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 37586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2243:19:65",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 37587,
                    "nodeType": "RevertStatement",
                    "src": "2236:26:65"
                  }
                },
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 37589,
                        "name": "Vanna",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37595,
                        "src": "2279:5:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Vanna_$37595_$",
                          "typeString": "type(contract Vanna)"
                        }
                      },
                      "id": 37590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2285:16:65",
                      "memberName": "beforeInitialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37594,
                      "src": "2279:22:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_declaration_pure$_t_address_$_t_struct$_PoolKey_$37159_calldata_ptr_$_t_uint160_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                        "typeString": "function Vanna.beforeInitialize(address,struct PoolKey calldata,uint160,bytes calldata) pure returns (bytes4)"
                      }
                    },
                    "id": 37591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "2302:8:65",
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "2279:31:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 37579,
                  "id": 37592,
                  "nodeType": "Return",
                  "src": "2272:38:65"
                }
              ]
            },
            "baseFunctions": [
              24270
            ],
            "functionSelector": "3440d820",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beforeInitialize",
            "nameLocation": "2046:16:65",
            "overrides": {
              "id": 37576,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2171:8:65"
            },
            "parameters": {
              "id": 37575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37567,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37594,
                  "src": "2072:7:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37566,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2072:7:65",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37570,
                  "mutability": "mutable",
                  "name": "key",
                  "nameLocation": "2106:3:65",
                  "nodeType": "VariableDeclaration",
                  "scope": 37594,
                  "src": "2089:20:65",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PoolKey_$37159_calldata_ptr",
                    "typeString": "struct PoolKey"
                  },
                  "typeName": {
                    "id": 37569,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37568,
                      "name": "PoolKey",
                      "nameLocations": [
                        "2089:7:65"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 37159,
                      "src": "2089:7:65"
                    },
                    "referencedDeclaration": 37159,
                    "src": "2089:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolKey_$37159_storage_ptr",
                      "typeString": "struct PoolKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37572,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37594,
                  "src": "2119:7:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  },
                  "typeName": {
                    "id": 37571,
                    "name": "uint160",
                    "nodeType": "ElementaryTypeName",
                    "src": "2119:7:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37574,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37594,
                  "src": "2136:14:65",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 37573,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2136:5:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2062:94:65"
            },
            "returnParameters": {
              "id": 37579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37578,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37594,
                  "src": "2189:6:65",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 37577,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2189:6:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2188:8:65"
            },
            "scope": 37595,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37449,
              "name": "BaseHook",
              "nameLocations": [
                "593:8:65"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24413,
              "src": "593:8:65"
            },
            "id": 37450,
            "nodeType": "InheritanceSpecifier",
            "src": "593:8:65"
          },
          {
            "baseName": {
              "id": 37451,
              "name": "IDynamicFeeManager",
              "nameLocations": [
                "603:18:65"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30096,
              "src": "603:18:65"
            },
            "id": 37452,
            "nodeType": "InheritanceSpecifier",
            "src": "603:18:65"
          }
        ],
        "canonicalName": "Vanna",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          37595,
          30096,
          24413,
          30307
        ],
        "name": "Vanna",
        "nameLocation": "584:5:65",
        "scope": 37596,
        "usedErrors": [
          24122,
          24124,
          24126,
          24128,
          24130,
          31411,
          37457
        ],
        "usedEvents": []
      }
    ],
    "license": "MIT"
  },
  "id": 65
}